

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (7 October 2021 20:25:43) as C:\Users\maxi\Desktop\portfolio\CuisUniversity-4532.image!


----End fileIn of C:\Users\maxi\Desktop\Facultad\Inge1\UBA-Inge1\17-Portfolio 1\Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:26:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:26:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:26:24'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'MF 10/7/2021 20:37:20' prior: 50859548!
balance

	^transactions sum: [ :aTransaction | aTransaction xxxx ] ifEmpty: [ 0 ]! !
!AccountTransaction methodsFor: 'nil' stamp: 'MF 10/7/2021 20:37:32'!
xxxx

	self subclassResponsibility ! !
!Deposit methodsFor: 'nil' stamp: 'MF 10/7/2021 20:37:42' overrides: 50859597!
xxxx

	^self value! !
!Withdraw methodsFor: 'nil' stamp: 'MF 10/7/2021 20:38:17' overrides: 50859597!
xxxx

	^self value negative.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:18'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:38:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:18'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:22'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:38:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:38:22'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:39:15' prior: 50859605 overrides: 50859597!
xxxx

	^self value * (-1) .! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:39:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:39:17'!
PASSED!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:40:38'!
effectOnBalance

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:40:38' overrides: 50859700!
effectOnBalance

	^self value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:40:38' overrides: 50859700!
effectOnBalance

	^self value * (-1) .! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:40:38' prior: 50859592!
balance

	^transactions sum: [ :aTransaction | aTransaction effectOnBalance ] ifEmpty: [ 0 ]! !

!methodRemoval: AccountTransaction #xxxx stamp: 'MF 10/7/2021 20:40:38'!
xxxx

	self subclassResponsibility !

!methodRemoval: Deposit #xxxx stamp: 'MF 10/7/2021 20:40:38'!
xxxx

	^self value!

!methodRemoval: Withdraw #xxxx stamp: 'MF 10/7/2021 20:40:38'!
xxxx

	^self value * (-1) .!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:40:46'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 20:41:00'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 20:43:53'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'MF 10/7/2021 20:43:49'!
test01

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:44:17'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 20:44:54'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 20:45:02' prior: 50859783!
balance

	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:45:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:45:05'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:46:10'!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:47:05' prior: 50859795!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	account register: (Deposit for: account). 
	
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:47:42' prior: 50859803!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:48:00' prior: 50859812!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:48:03' prior: 50859821!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:48:03'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:48:20'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 20:50:23'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:50:21' prior: 50859843!
add: aReceptiveAccount 
	
	account _ aReceptiveAccount! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:50:24'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 20:51:00' prior: 50859787!
balance

	^account balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:51:04' prior: 50859831!
test02

	| portfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:51:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:51:04'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:51:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:51:04'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:51:12'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 20:51:58' prior: 50859862!
balance

	account ifNotNil: [ ^account balance ].
	
	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:51:59'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:51:59'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:53:13'!
test03

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: 110 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 20:53:14'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 20:53:55'!
Object subclass: #Portfolio
	instanceVariableNames: 'account accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:53:53' prior: 50859855!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount! !
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 20:54:28' prior: 50859887!
balance

	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:54:36'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:54:36'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 20:54:36'!
ERROR!
!Portfolio methodsFor: 'nil' stamp: 'MF 10/7/2021 20:54:57' overrides: 16896425!
initialize

	accounts _ OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/7/2021 20:54:58'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 20:55:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 20:55:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 20:55:02'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 20:55:10'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 21:01:03'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountsAndPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:03' prior: 50859921!
add: aReceptiveAccount 
	
	accountsAndPortfolios add: aReceptiveAccount! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:03' prior: 50859938 overrides: 16896425!
initialize

	accountsAndPortfolios _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:03' prior: 50859926!
balance

	^accountsAndPortfolios sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 21:01:20' prior: 50860009!
balance

	^accountsAndPortfolios sum: [ :anAccountOrPortfolio | anAccountOrPortfolio balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 21:01:27' prior: 50860015!
balance

	^accountsAndPortfolios sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 21:01:31'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:31' prior: 50859998!
add: aReceptiveAccount 
	
	accounts add: aReceptiveAccount! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:31' prior: 50860004 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:01:31' prior: 50860022!
balance

	^accounts sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:02:47'!
test04

	| portfolio anotherPortfolio account |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	anotherPortfolio add: portfolio.
	
	self assert: 50 equals: anotherPortfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:03:04' prior: 50860052!
test04

	| portfolio anotherPortfolio account |
	
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	anotherPortfolio add: portfolio.
	
	self assert: 50 equals: anotherPortfolio balance.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:03:06'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:03:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:03:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:03:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:03:06'!
PASSED!

!methodRemoval: PortfolioTest #test04 stamp: 'MF 10/7/2021 21:03:10'!
test04

	| portfolio anotherPortfolio account |
	
	portfolio _ Portfolio new.
	anotherPortfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	anotherPortfolio add: portfolio.
	
	self assert: 50 equals: anotherPortfolio balance.!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/7/2021 21:04:20'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:04:20' prior: 50860036!
add: aReceptiveAccount 
	
	accountsXXX add: aReceptiveAccount! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:04:20' prior: 50860042 overrides: 16896425!
initialize

	accountsXXX _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:04:20' prior: 50860047!
balance

	^accountsXXX sum: [ :anAccount | anAccount balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'balance' stamp: 'MF 10/7/2021 21:04:23' prior: 50860118!
balance

	^accountsXXX sum: [ :anAccountXXX | anAccountXXX balance ] ifEmpty: [ 0 ]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:09:27'!
test04

	| portfolio account transaction |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	self deny: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:09:43'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:09:50'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:10:21' prior: 50860142!
hasRegistered: aTransaction

	^false.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:10:22'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:10:22'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:10:22'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:10:22'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:10:22'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:10:43'!
test05

	| portfolio account transaction |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:10:44'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'MF 10/7/2021 21:12:01' prior: 50860147!
hasRegistered: aTransaction

	accountsXXX ifEmpty: [ ^false ].
	^ accountsXXX first hasRegistered: aTransaction.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:12:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:12:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:12:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:12:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:12:02'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:13:29' prior: 50859897!
test03

	| portfolio account anotherAccount transaction |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:13:29'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'MF 10/7/2021 21:14:05' prior: 50860176!
hasRegistered: aTransaction

	^ accountsXXX anySatisfy: [ :anAccountXXX | anAccountXXX hasRegistered: aTransaction ]! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:14:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:14:18'!
test06

	| portfolio account anotherAccount transaction |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 20:53:13' prior: 50860195!
test03

	| portfolio account anotherAccount |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: 110 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/7/2021 21:14:31'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:20:42'!
test07

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio transactions isEmpty.! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/7/2021 21:20:43'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/7/2021 21:20:47'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/7/2021 21:20:56'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/7/2021 21:21:04' prior: 50860288!
transactions
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/7/2021 21:21:05'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:21:57'!
test08

	| portfolio account transaction |
	
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio transactions includes: transaction).! !

!testRun: #PortfolioTest #test08 stamp: 'MF 10/7/2021 21:22:05'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/7/2021 21:23:12' prior: 50860293!
transactions

	accountsXXX ifEmpty: [ ^OrderedCollection new ].
	^accountsXXX first transactions. ! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/7/2021 21:23:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/7/2021 21:23:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/7/2021 21:23:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/7/2021 21:23:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/7/2021 21:23:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/7/2021 21:23:13'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/7/2021 21:23:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/7/2021 21:23:13'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/7/2021 21:23:31'!
test09

	| portfolio account anotherAccount transaction |
	
	portfolio _ Portfolio new.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transaction).! !

!testRun: #PortfolioTest #test09 stamp: 'MF 10/7/2021 21:23:33'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/7/2021 21:25:12' prior: 50860329!
transactions

	accountsXXX ifEmpty: [ ^OrderedCollection new ].
	^accountsXXX first transactions. ! !

----SNAPSHOT----(7 October 2021 23:48:36) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (13 October 2021 22:28:49) as C:\Users\maxi\Desktop\portfolio\CuisUniversity-4532.image!

!ReceptiveAccount methodsFor: 'balance' stamp: 'MF 10/13/2021 23:31:10' prior: 50859715!
balance

	^transactions inject: 0 into: [ :balanceBeingCalculated :transaction | transaction modifyBalance: balanceBeingCalculated ].! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'MF 10/13/2021 23:31:30'!
modifyBalance: balanceToChange

	self subclassResponsibility.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'MF 10/13/2021 23:32:03' overrides: 50860391!
modifyBalance: balanceToChange

	^balanceToChange + self value.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'MF 10/13/2021 23:32:20' overrides: 50860391!
modifyBalance: balanceToChange

	^balanceToChange - self value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/13/2021 23:32:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/13/2021 23:32:21'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'MF 10/13/2021 23:32:36' prior: 50860384!
balance

	^transactions inject: 0 into: [ :balanceBeingCalculated :transaction |
		 transaction modifyBalance: balanceBeingCalculated ].! !

----SNAPSHOT----(13 October 2021 23:35:35) CuisUniversity-4532.image priorSource: 16919237!

----SNAPSHOT----(13 October 2021 23:35:43) CuisUniversity-4532.image priorSource: 16921323!

----STARTUP---- (14 October 2021 20:12:14) as C:\Users\maxi\Desktop\portfolio\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/14/2021 21:09:25'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/14/2021 21:09:25'!
FAILURE!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/14/2021 21:09:25'!
FAILURE!

----STARTUP---- (14 October 2021 21:19:15) as E:\Cursada Actual IS1\Cuis Limpio\windows64\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:21:10'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:21:10'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:21:10'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:21:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:21:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:21:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:21:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:21:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:21:11'!
FAILURE!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:21:11'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'LNB 10/14/2021 21:26:23' prior: 50860371!
transactions

	"accountsXXX ifEmpty: [ ^OrderedCollection new ].
	^accountsXXX first transactions. "
	
	accountsXXX 
		inject: OrderedCollection new 
		into: [ :allTransactions :anXXXAccount | allTransactions addAllLast: anXXXAccount transactions].! !

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:26:25'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:26:25'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:26:26'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:26:26'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'LNB 10/14/2021 21:26:35' prior: 50860519!
transactions

	"accountsXXX ifEmpty: [ ^OrderedCollection new ].
	^accountsXXX first transactions. "
	
	^accountsXXX 
		inject: OrderedCollection new 
		into: [ :allTransactions :anXXXAccount | allTransactions addAllLast: anXXXAccount transactions].! !

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:26:36'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:26:36'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:26:36'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:26:36'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:26:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:26:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:26:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:26:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:26:37'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'LNB 10/14/2021 21:28:23' prior: 50860551!
transactions

	^accountsXXX 
		inject: OrderedCollection new 
		into: [ :allTransactions :anXXXAccount | allTransactions addAllLast: anXXXAccount transactions].! !

Object subclass: #FinancialRecord
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialRecord category: 'Portfolio-Ejercicio' stamp: 'LNB 10/14/2021 21:38:50'!
Object subclass: #FinancialRecord
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #FinancialRecord
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialRecord category: 'Portfolio-Ejercicio' stamp: 'LNB 10/14/2021 21:39:16'!
Object subclass: #FinancialRecord
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LNB 10/14/2021 21:39:21'!
FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'accountsXXX'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialRecord subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'LNB 10/14/2021 21:39:29'!
FinancialRecord subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LNB 10/14/2021 21:40:02'!
FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'financialRecords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:02' prior: 50860584!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :anXXXAccount | allTransactions addAllLast: anXXXAccount transactions].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:02' prior: 50860113 overrides: 16896425!
initialize

	financialRecords _ OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:02' prior: 50860212!
hasRegistered: aTransaction

	^ financialRecords anySatisfy: [ :anAccountXXX | anAccountXXX hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:02' prior: 50860124!
balance

	^financialRecords sum: [ :anAccountXXX | anAccountXXX balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:03' prior: 50860107!
add: aReceptiveAccount 
	
	financialRecords add: aReceptiveAccount! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:40:30' prior: 50860683!
add: aFinancialRecord 
	
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'balance' stamp: 'LNB 10/14/2021 21:40:40' prior: 50860677!
balance

	^financialRecords sum: [ :aFinancialRecord | aFinancialRecord balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'testing' stamp: 'LNB 10/14/2021 21:40:56' prior: 50860670!
hasRegistered: aTransaction

	^ financialRecords anySatisfy: [ :aFinancialRecord | aFinancialRecord hasRegistered: aTransaction ]! !
!Portfolio methodsFor: 'transactions' stamp: 'LNB 10/14/2021 21:41:13' prior: 50860656!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAllLast: aFinancialRecord transactions].! !

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:41:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:41:24'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:15'!
porfolio

	^ Portfolio new! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:15' prior: 50859775!
test01

	| portfolio |
	
	portfolio _ self porfolio.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:28'!
portfolio

	^ Portfolio new! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:28' prior: 50860742!
test01

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: 0 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #porfolio stamp: 'LNB 10/14/2021 21:43:28'!
porfolio

	^ Portfolio new!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:42' prior: 50859866!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:46' prior: 50860248!
test03

	| portfolio account anotherAccount |
	
	portfolio _ self portfolio.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: 110 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:49' prior: 50860130!
test04

	| portfolio account transaction |
	
	portfolio _ self portfolio.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	self deny: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:54' prior: 50860163!
test05

	| portfolio account transaction |
	
	portfolio _ self portfolio.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:43:58' prior: 50860233!
test06

	| portfolio account anotherAccount transaction |
	
	portfolio _ self portfolio.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:44:00' prior: 50860278!
test07

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: portfolio transactions isEmpty.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:44:03' prior: 50860316!
test08

	| portfolio account transaction |
	
	portfolio _ self portfolio.
	account _ ReceptiveAccount new.
	transaction _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio transactions includes: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:44:08' prior: 50860354!
test09

	| portfolio account anotherAccount transaction |
	
	portfolio _ self portfolio.
	account _ 	ReceptiveAccount new.
	Deposit register: 50 on: account.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:46:05'!
accountWithTransaction

	^ ReceptiveAccount new! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:46:05' prior: 50860763!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	self accountWithTransaction.
	Deposit register: 50 on: account.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:46:25' prior: 50860861!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	self accountWithTransaction.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:47:00' prior: 50860856!
accountWithTransaction

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.! !

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:47:13'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:48:15'!
accountWithDeposit

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:48:16' prior: 50860871!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDeposit.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #accountWithTransaction stamp: 'LNB 10/14/2021 21:48:16'!
accountWithTransaction

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.!

!methodRemoval: Withdraw #effectOnBalance stamp: 'LNB 10/14/2021 21:50:24'!
effectOnBalance

	^self value * (-1) .!

!methodRemoval: Deposit #effectOnBalance stamp: 'LNB 10/14/2021 21:50:28'!
effectOnBalance

	^self value!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:50:49'!
accountWithDepositWorth

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:50:49' prior: 50860918!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #accountWithDeposit stamp: 'LNB 10/14/2021 21:50:49'!
accountWithDeposit

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:51:13'!
accountWithDepositWorth: transactionValue

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:51:13' prior: 50860947!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	portfolio add: account.
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #accountWithDepositWorth stamp: 'LNB 10/14/2021 21:51:13'!
accountWithDepositWorth

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: 50 on: account.
	^account.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:51:31' prior: 50860962!
accountWithDepositWorth: aTransactionValue

	| account |
	
	account _ ReceptiveAccount new.
	Deposit register: aTransactionValue on: account.
	^account.! !

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:51:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:51:45'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:51:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:54:14' prior: 50860773!
test03

	| portfolio account anotherAccount |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	anotherAccount _ self accountWithDepositWorth: 60.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: 110 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:54:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:56:43' prior: 50860808!
test06

	| portfolio account anotherAccount transaction |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transaction).! !

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:56:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:56:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:56:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:56:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:56:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/14/2021 21:59:14' prior: 50860841!
test09

	| portfolio account anotherAccount transaction |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ ReceptiveAccount new.
	transaction _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transaction).! !

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/14/2021 21:59:18'!
PASSED!

----SNAPSHOT----(14 October 2021 22:19:09) CuisUniversity-4532.image priorSource: 16921416!

----STARTUP---- (16 October 2021 17:11:07) as E:\Cursada Actual IS1\Portfolio1\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:17:23' prior: 50861018!
test03

	| portfolio |
	
	portfolio _ self portfolio.

	portfolio add: (self accountWithDepositWorth: 50).
	portfolio add: (self accountWithDepositWorth: 60).
	
	self assert: 110 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:17:31'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:18:11' prior: 50860970!
test02

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ 	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:18:16' prior: 50861171!
test02

	| portfolio |
	
	portfolio _ self portfolio.
	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:18:28'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:18:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:18:31'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:26:40' prior: 50860787!
test04

	| portfolio account transaction |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transaction _ account transactions first.
	
	self deny: (portfolio hasRegistered: transaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:26:48' prior: 50861212!
test04

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	self deny: (portfolio hasRegistered: transactionOfAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:27:04' prior: 50860797!
test05

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ ReceptiveAccount new.
	transactionOfAccount _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transactionOfAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:27:25' prior: 50861054!
test06

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ ReceptiveAccount new.
	transactionOfAnotherAccount _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:27:42' prior: 50860830!
test08

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ ReceptiveAccount new.
	transactionOfAccount _ Deposit register: 50 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio transactions includes: transactionOfAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:27:52' prior: 50861092!
test09

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ ReceptiveAccount new.
	transactionOfAnotherAccount _ Deposit register: 60 on: anotherAccount. 
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transactionOfAnotherAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:28:36' prior: 50861233!
test05

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: transactionOfAccount).! !

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:28:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:28:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:28:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:28:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:28:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:29:15' prior: 50861245!
test06

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ account transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).! !

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:29:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:29:30' prior: 50861261!
test08

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	portfolio add: account.
	
	self assert: (portfolio transactions includes: transactionOfAccount).! !

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:29:32'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:29:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:29:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:29:47' prior: 50861273!
test09

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ account transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transactionOfAnotherAccount).! !

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:29:49'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:30:15' prior: 50861401!
test09

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio transactions includes: transactionOfAnotherAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:30:22' prior: 50861325!
test06

	| portfolio account anotherAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).! !

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:30:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:30:24'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:31:29' prior: 50861437!
test06

	| portfolio account anotherAccount transactionOfAnotherAccount transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	transactionOfAccount _ account transactions first.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:31:39' prior: 50861477!
test06

	| portfolio account anotherAccount transactionOfAnotherAccount transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	transactionOfAccount _ account transactions first.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).
	self assert: (portfolio hasRegistered: transactionOfAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:31:47' prior: 50861498!
test06

	| portfolio account anotherAccount transactionOfAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	transactionOfAccount _ account transactions first.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).
	self assert: (portfolio hasRegistered: transactionOfAccount).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:31:52' prior: 50861519!
test06

	| portfolio account anotherAccount transactionOfAccount transactionOfAnotherAccount |
	
	portfolio _ self portfolio.
	account _ 	self accountWithDepositWorth: 50.
	transactionOfAccount _ account transactions first.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount .
	
	self assert: (portfolio hasRegistered: transactionOfAccount).
	self assert: (portfolio hasRegistered: transactionOfAnotherAccount).
	! !

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:31:57'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:31:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:31:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:35:59'!
xxx: aPortfolio

	| account transactionOfAccount |
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	aPortfolio add: account.
	
	^transactionOfAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:36:07' prior: 50861584!
xxx: aPortfolio

	| account transactionOfAccount |
	
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	aPortfolio add: account.
	
	^transactionOfAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:37:03' prior: 50861289!
test05

	| portfolio transactionOfAccount |
	
	portfolio _ self portfolio.
	"account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	portfolio add: account."
	
	transactionOfAccount _ self xxx: portfolio.
	
	self assert: (portfolio hasRegistered: transactionOfAccount).! !

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:37:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:37:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:37:56'!
addNewAccountWithATransactionTo: aPortfolio

	| account transactionOfAccount |
	
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	aPortfolio add: account.
	
	^transactionOfAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:37:56' prior: 50861604!
test05

	| portfolio transactionOfAccount |
	
	portfolio _ self portfolio.
	"account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	portfolio add: account."
	
	transactionOfAccount _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: transactionOfAccount).! !

!methodRemoval: PortfolioTest #xxx: stamp: 'LNB 10/16/2021 17:37:57'!
xxx: aPortfolio

	| account transactionOfAccount |
	
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	aPortfolio add: account.
	
	^transactionOfAccount.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:39:21' prior: 50861652!
test05

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	"account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	portfolio add: account."
	
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).! !

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:39:23'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:39:30' prior: 50861675!
test05

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:40:14' prior: 50861540!
test06

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	"account _ 	self accountWithDepositWorth: 50.
	transactionOfAccount _ account transactions first.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount ."
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	! !

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:40:29'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:40:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:40:47' prior: 50861723!
test06

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:41:17' prior: 50861365!
test08

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).! !

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:41:26'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:41:26'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:41:26'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:41:26'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:41:26'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:41:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:41:27'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:41:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:41:27'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:41:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:42:28' prior: 50861420!
test09

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	"account _ 	self accountWithDepositWorth: 50.
	anotherAccount _ (self accountWithDepositWorth: 50).
	transactionOfAnotherAccount _ anotherAccount transactions first.
	
	portfolio add: account.
	portfolio add: anotherAccount ."
	
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).
	self assert: (portfolio transactions includes: anotherNewlyAddedTransaction).! !

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:42:37'!
FAILURE!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:43:51'!
FAILURE!

self transactions!

self transactions !

self addNewAccountWithATransactionTo: portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LNB 10/16/2021 17:48:46' prior: 50861641!
addNewAccountWithATransactionTo: aPortfolio

	| account |
	
	account _ (self accountWithDepositWorth: 50).
	
	aPortfolio add: account.
	
	^account transactions first.! !

!testRun: #PortfolioTest #test01 stamp: 'LNB 10/16/2021 17:48:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LNB 10/16/2021 17:48:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LNB 10/16/2021 17:48:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LNB 10/16/2021 17:48:55'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LNB 10/16/2021 17:48:55'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LNB 10/16/2021 17:48:55'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LNB 10/16/2021 17:48:55'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LNB 10/16/2021 17:48:55'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:48:55'!
FAILURE!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:48:55'!
FAILURE!

self addNewAccountWithATransactionTo: portfolio!

newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.!

self addNewAccountWithATransactionTo: portfolio.!

!testRun: #PortfolioTest #test09 stamp: 'LNB 10/16/2021 17:50:12'!
FAILURE!

----SNAPSHOT----(16 October 2021 17:50:35) CuisUniversity-4532.image priorSource: 16943326!

----QUIT----(16 October 2021 17:50:46) CuisUniversity-4532.image priorSource: 16967744!

----STARTUP---- (16 October 2021 17:55:00) as C:\Users\maxi\Desktop\portfolio - Copy\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 17:56:22'!
FAILURE!

account!

account transactions!

account transactions first!

newlyAddedTransaction !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 17:57:57' prior: 50861822!
test09

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).
	self assert: (portfolio transactions includes: anotherNewlyAddedTransaction).! !

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 17:58:06'!
FAILURE!

portfolio transactions!

aFinancialRecord transactions !

allTransactions !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:01:04' prior: 50860707!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAllLast: aFinancialRecord transactions ].! !

aFinancialRecord !

aFinancialRecord transactions !

allTransactions !

allTransactions !

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:02:01'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:02:38' prior: 50861929!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].! !

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:02:43'!
FAILURE!

portfolio transactions!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:04:54' prior: 50861943!
transactions

	| transactions |

	
	transactions _ financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].
		
	^ transactions.! !

transactions !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:05:22' prior: 50861955!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].! !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:05:53' prior: 50861966!
transactions

	^financialRecords 
		inject: OrderedCollection new 
		into: [ :allTransactions :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].! !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:09:25' prior: 50861975!
transactions

	| allTransactions |
	allTransactions _ OrderedCollection new.
	
	financialRecords do: [ :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].
	
	^allTransactions.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:09:28'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 18:09:37' prior: 50861984!
transactions

	| allTransactions |
	allTransactions _ OrderedCollection new.
	financialRecords do: [ :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].
	
	^allTransactions.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:17:35'!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self should: [ portfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: FinancialRecord cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:18:01' prior: 50862024!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self should: [ portfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: FinancialRecord cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:18:07'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:20:12' prior: 50860689!
add: aFinancialRecord 
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self error: FinancialRecord cannotAddFinancialRecordErrorDescription ].
	
	financialRecords add: aFinancialRecord! !
!FinancialRecord class methodsFor: 'no messages' stamp: 'MF 10/16/2021 18:20:41'!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:20:44'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:21:06' prior: 50862054!
add: aFinancialRecord 
	
	(financialRecords includes: aFinancialRecord) ifTrue:
		 [ self error: FinancialRecord cannotAddFinancialRecordErrorDescription ].
	
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:21:38'!
signalCannotAddFinancialRecordError

	^ self error: FinancialRecord cannotAddFinancialRecordErrorDescription! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:21:38' prior: 50862095!
add: aFinancialRecord 
	
	(financialRecords includes: aFinancialRecord) ifTrue:
		 [ self signalCannotAddFinancialRecordError ].
	
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:21:48' prior: 50862111!
add: aFinancialRecord 
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords add: aFinancialRecord! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:25:45'!
test11

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	
	self should: [ externalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: FinancialRecord cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:25:58'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:29:12' prior: 50862120!
add: aFinancialRecord 
	
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].
	
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:29:24'!
assertCanAdd: aFinancialRecord

	^ (financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:29:24' prior: 50862148!
add: aFinancialRecord 
	
	
	self assertCanAdd: aFinancialRecord.
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].
	
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:29:45' prior: 50862168!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].
	
	financialRecords add: aFinancialRecord! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'MF 10/16/2021 18:30:05'!
assertCanAdd: aFinancialRecord

	^true.! !

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/16/2021 18:30:13'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:30:16'!
PASSED!
!FinancialRecord methodsFor: 'no messages' stamp: 'MF 10/16/2021 18:30:58'!
assertCanAdd: aFinancialRecord

	self subclassResponsibility.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:31:33' prior: 50862160 overrides: 50862274!
assertCanAdd: aFinancialRecord

	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:31:41' prior: 50862178!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:31:46' prior: 50862280 overrides: 50862274!
assertCanAdd: aFinancialRecord

	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:31:47' prior: 50862295 overrides: 50862274!
assertCanAdd: aFinancialRecord

	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:31:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:39:19'!
test12

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: FinancialRecord cannotAddItselfErrorDescription ].! !
!FinancialRecord class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:39:40'!
cannotAddItselfErrorDescription

	^'Cannot add itself'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:39:55' prior: 50862038!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self should: [ portfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:03' prior: 50862128!
test11

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	
	self should: [ externalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:08' prior: 50862344!
test12

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddItselfErrorDescription ].! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:15' overrides: 50862063!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:15' overrides: 50862063!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'! !

!methodRemoval: FinancialRecord class #cannotAddFinancialRecordErrorDescription stamp: 'MF 10/16/2021 18:40:15'!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:22' overrides: 50862355!
cannotAddItselfErrorDescription

	^'Cannot add itself'! !
!ReceptiveAccount class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:22' overrides: 50862355!
cannotAddItselfErrorDescription

	^'Cannot add itself'! !

!methodRemoval: FinancialRecord class #cannotAddItselfErrorDescription stamp: 'MF 10/16/2021 18:40:22'!
cannotAddItselfErrorDescription

	^'Cannot add itself'!

!methodRemoval: ReceptiveAccount class #cannotAddFinancialRecordErrorDescription stamp: 'MF 10/16/2021 18:40:27'!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'!

!methodRemoval: ReceptiveAccount class #cannotAddItselfErrorDescription stamp: 'MF 10/16/2021 18:40:29'!
cannotAddItselfErrorDescription

	^'Cannot add itself'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:40:39' prior: 50862423!
cannotAddItselfErrorDescription

	^'Cannot add portfolio to itself'! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:41:24'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:41:49' prior: 50862307 overrides: 50862274!
assertCanAdd: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:41:50'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:42:01' prior: 50862104!
signalCannotAddFinancialRecordError

	^ self error: Portfolio cannotAddFinancialRecordErrorDescription! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:42:19' prior: 50862460 overrides: 50862274!
assertCanAdd: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self error: Portfolio cannotAddItselfErrorDescription ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:42:20'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:42:35'!
signalCannotAddItselfError

	^ self error: Portfolio cannotAddItselfErrorDescription! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:42:35' prior: 50862483 overrides: 50862274!
assertCanAdd: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:45:19'!
test13

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:45:52'!
FAILURE!

parent!

paren!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/16/2021 18:49:09'!
FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'financialRecords parentPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:49:06' prior: 50862532 overrides: 50862274!
assertCanAdd: aFinancialRecord

	parentPortfolio assertCanAdd: aFinancialRecord.
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:50:36' prior: 50862288!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:51:24'!
addParent: aParentPortfolio.

	parentPortfolio _ aParentPortfolio.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'MF 10/16/2021 18:52:48'!
FinancialRecord subclass: #Portfolio
	instanceVariableNames: 'financialRecords'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialRecord category: 'Portfolio-Ejercicio' stamp: 'MF 10/16/2021 18:52:48'!
Object subclass: #FinancialRecord
	instanceVariableNames: 'parentPortfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:52:55'!
addParent: aParentPortfolio.

	parentPortfolio _ aParentPortfolio.! !

!methodRemoval: Portfolio #addParent: stamp: 'MF 10/16/2021 18:52:55'!
addParent: aParentPortfolio.

	parentPortfolio _ aParentPortfolio.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:54:54' prior: 50862575 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:56:09' prior: 50862590!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolio isNil ifTrue: [ parentPortfolio assertCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:56:10'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:56:10'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:56:10'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:56:10'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:56:10'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:56:23' prior: 50862642!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolio isNotNil ifTrue: [ parentPortfolio assertCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:56:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:56:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:56:27'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:56:27'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:56:27'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:56:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:56:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:56:53'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:56:53'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:56:53'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:56:55'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:57:11'!
ERROR!

parentPortfolio!

parentPortfolio isNotNil!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 18:58:13' prior: 50862683!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolio ifNotNil: [ parentPortfolio assertCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 18:58:14'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:00:26'!
test14

	| internalPortfolio externalPortfolio account secondlyInternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	secondlyInternalPortfolio _ self portfolio.
	internalPortfolio add: secondlyInternalPortfolio.
	
	self should: [ secondlyInternalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:00:38' prior: 50862800!
test14

	| internalPortfolio externalPortfolio account deeperInternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	deeperInternalPortfolio _ self portfolio.
	internalPortfolio add: deeperInternalPortfolio.
	
	self should: [ deeperInternalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:01:06'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:01:11' prior: 50862760!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:01:17' prior: 50862629 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].
	
	parentPortfolio ifNotNil: [ parentPortfolio assertCanAdd: aFinancialRecord ].
! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:01:17'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:01:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:01:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:01:18'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:01:38' prior: 50862854 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:01:48' prior: 50862846!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolio ifNotNil: [ parentPortfolio assertCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:03:02' prior: 50862914!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolio ifNotNil: [ parentPortfolio assertParentCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:03:31'!
assertParentCanAdd: aFinancialRecord 

	self assertCanAdd: aFinancialRecord.
	parentPortfolio ifNotNil: [ parentPortfolio assertParentCanAdd: aFinancialRecord ].
! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:03:33'!
PASSED!
!Behavior method!
initialize
	(financialRecords _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (14 to: 29)
		declaredAt: (14 to: 29).! !
!Behavior method!
balance
	^ [
	(financialRecords
		cover: (12 to: 27)
		declaredAt: (12 to: 27))
		sum: [ :aFinancialRecord |
			[
			(aFinancialRecord
				cover: (56 to: 71)
				declaredAt: (37 to: 52)) balance ] valueCoveringAll:
				{73 to: 79} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{29 to: 32. 83 to: 90}.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aFinancialRecord
	[
	(self coverAll:
		{27 to: 30}) assertCanAdd:
		(aFinancialRecord
			cover: (46 to: 61)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{32 to: 44}.
	[
	(parentPortfolio
		cover: (65 to: 79)
		declaredAt: (65 to: 79)) ifNotNil: [
		[
		(parentPortfolio
			cover: (93 to: 107)
			declaredAt: (65 to: 79)) assertParentCanAdd:
			(aFinancialRecord
				cover: (129 to: 144)
				declaredAt: (6 to: 21)) ] valueCoveringAll:
			{109 to: 127} ]] valueCoveringAll:
		{81 to: 89}.
	[
	(financialRecords
		cover: (150 to: 165)
		declaredAt: (150 to: 165)) add:
		(aFinancialRecord
			cover: (172 to: 187)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{167 to: 170}.
	[
	(aFinancialRecord
		cover: (191 to: 206)
		declaredAt: (6 to: 21)) addParent:
		(self coverAll:
			{219 to: 222}) ] valueCoveringAll:
		{208 to: 217}.! !
!Behavior method!
assertCanAdd: aFinancialRecord
	[
	([
	(self coverAll:
		{35 to: 38}) =
		(aFinancialRecord
			cover: (42 to: 57)
			declaredAt: (15 to: 30)) ] valueCoveringAll:
		{40 to: 40}) ifTrue: [
		[
		(self coverAll:
			{69 to: 72}) signalCannotAddItselfError ] valueCoveringAll:
			{74 to: 99} ]] valueCoveringAll:
		{59 to: 65}.
	[
	([
	(financialRecords
		cover: (108 to: 123)
		declaredAt: (108 to: 123)) includes:
		(aFinancialRecord
			cover: (135 to: 150)
			declaredAt: (15 to: 30)) ] valueCoveringAll:
		{125 to: 133}) ifTrue: [
		[
		(self coverAll:
			{163 to: 166}) signalCannotAddFinancialRecordError ] valueCoveringAll:
			{168 to: 202} ]] valueCoveringAll:
		{153 to: 159}.
	[
	(financialRecords
		cover: (210 to: 225)
		declaredAt: (108 to: 123)) do: [ :internalFinancialRecord |
		[
		(internalFinancialRecord
			cover: (260 to: 282)
			declaredAt: (234 to: 256)) assertCanAdd:
			(aFinancialRecord
				cover: (298 to: 313)
				declaredAt: (15 to: 30)) ] valueCoveringAll:
			{284 to: 296} ]] valueCoveringAll:
		{227 to: 229}.! !
!Behavior method!
addParent: aParentPortfolio
	self.
	(parentPortfolio _ aParentPortfolio
		cover: (50 to: 65)
		declaredAt: (12 to: 27))
		cover: (32 to: 46)
		declaredAt: (32 to: 46).! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balanceBeingCalculated :transaction |
			[
			(transaction
				cover: (85 to: 95)
				declaredAt: (68 to: 78)) modifyBalance:
				(balanceBeingCalculated
					cover: (112 to: 133)
					declaredAt: (44 to: 65)) ] valueCoveringAll:
				{97 to: 110} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifyBalance: balanceToChange
	^ [
	(balanceToChange
		cover: (35 to: 49)
		declaredAt: (16 to: 30)) +
		([
		(self coverAll:
			{53 to: 56}) value ] valueCoveringAll:
			{58 to: 62}) ] valueCoveringAll:
		{51 to: 51}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
assertCanAdd: aFinancialRecord
	^ true coverAll:
		{35 to: 38}.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialRecords
		cover: (33 to: 48)
		declaredAt: (33 to: 48)) anySatisfy: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (84 to: 99)
			declaredAt: (65 to: 80)) hasRegistered:
			(aTransaction
				cover: (116 to: 127)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{101 to: 114} ]] valueCoveringAll:
		{50 to: 60}.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
transactions
	| allTransactions |
	(allTransactions _ [
	(OrderedCollection
		cover: (55 to: 71)
		declaredAt: (55 to: 71)) new ] valueCoveringAll:
		{73 to: 75})
		cover: (37 to: 51)
		declaredAt: (18 to: 32).
	[
	(financialRecords
		cover: (79 to: 94)
		declaredAt: (79 to: 94)) do: [ :aFinancialRecord |
		[
		(allTransactions
			cover: (122 to: 136)
			declaredAt: (18 to: 32)) addAll:
			([
			(aFinancialRecord
				cover: (146 to: 161)
				declaredAt: (103 to: 118)) transactions ] valueCoveringAll:
				{163 to: 174}) ] valueCoveringAll:
			{138 to: 144} ]] valueCoveringAll:
		{96 to: 98}.
	^ allTransactions
		cover: (183 to: 197)
		declaredAt: (18 to: 32).! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
signalCannotAddFinancialRecordError
	^ [
	(self coverAll:
		{41 to: 44}) error:
		([
		(Portfolio
			cover: (53 to: 61)
			declaredAt: (53 to: 61)) cannotAddFinancialRecordErrorDescription ] valueCoveringAll:
			{63 to: 102}) ] valueCoveringAll:
		{46 to: 51}.! !
!Behavior method!
cannotAddFinancialRecordErrorDescription
	^ 'Cannot add repeated financial record' coverAll:
		{45 to: 82}.! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
signalCannotAddItselfError
	^ [
	(self coverAll:
		{32 to: 35}) error:
		([
		(Portfolio
			cover: (44 to: 52)
			declaredAt: (44 to: 52)) cannotAddItselfErrorDescription ] valueCoveringAll:
			{54 to: 84}) ] valueCoveringAll:
		{37 to: 42}.! !
!Behavior method!
cannotAddItselfErrorDescription
	^ 'Cannot add portfolio to itself' coverAll:
		{36 to: 67}.! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!Behavior method!
assertParentCanAdd: aFinancialRecord
	[
	(self coverAll:
		{41 to: 44}) assertCanAdd:
		(aFinancialRecord
			cover: (60 to: 75)
			declaredAt: (21 to: 36)) ] valueCoveringAll:
		{46 to: 58}.
	[
	(parentPortfolio
		cover: (79 to: 93)
		declaredAt: (79 to: 93)) ifNotNil: [
		[
		(parentPortfolio
			cover: (107 to: 121)
			declaredAt: (79 to: 93)) assertParentCanAdd:
			(aFinancialRecord
				cover: (143 to: 158)
				declaredAt: (21 to: 36)) ] valueCoveringAll:
			{123 to: 141} ]] valueCoveringAll:
		{95 to: 103}.! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:12:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:17:57'!
test15

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:17:58'!
FAILURE!
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:18:56' prior: 50862618!
addParent: aParentPortfolio.

	parentPortfolio _ aParentPortfolio.! !

!classDefinition: #FinancialRecord category: 'Portfolio-Ejercicio' stamp: 'MF 10/16/2021 19:19:01'!
Object subclass: #FinancialRecord
	instanceVariableNames: 'parentPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:19:01' prior: 50863277!
addParent: aParentPortfolio.

	parentPortfolios _ aParentPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:19:01' prior: 50862934!
assertParentCanAdd: aFinancialRecord 

	self assertCanAdd: aFinancialRecord.
	parentPortfolios ifNotNil: [ parentPortfolios assertParentCanAdd: aFinancialRecord ].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:19:01' prior: 50862924!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolios ifNotNil: [ parentPortfolios assertParentCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:19:05' prior: 50863291!
addParent: aParentPortfolio.

	parentPortfolios add: aParentPortfolio.! !
!Portfolio methodsFor: 'initialization' stamp: 'MF 10/16/2021 19:19:27' prior: 50860665 overrides: 16896425!
initialize

	financialRecords _ OrderedCollection new.
	parentPortfolios _ OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'MF 10/16/2021 19:19:40' prior: 50859534 overrides: 16896425!
initialize

	transactions _ OrderedCollection new.
	parentPortfolios _ OrderedCollection new.! !

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:20:07'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:20:46' prior: 50863306!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:20:47'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:20:47'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:20:47'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:21:29' prior: 50863297!
assertParentCanAdd: aFinancialRecord 

	self assertCanAdd: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:21:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:24:23'!
test16

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:24:40' prior: 50863434!
test16

	| internalPortfolio anotherInternalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	anotherInternalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:24:46' prior: 50863456!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	anotherInternalPortfolio add: internalPortfolio. 
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio .
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:25:48' prior: 50863479!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:26:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:28:19'!
aaatest16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!methodRemoval: PortfolioTest #test16 stamp: 'MF 10/16/2021 19:28:20'!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:28:21'!
PASSED!
!Behavior method!
initialize
	(financialRecords _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (14 to: 29)
		declaredAt: (14 to: 29).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (76 to: 92)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (57 to: 72)
		declaredAt: (57 to: 72).! !
!Behavior method!
balance
	^ [
	(financialRecords
		cover: (12 to: 27)
		declaredAt: (12 to: 27))
		sum: [ :aFinancialRecord |
			[
			(aFinancialRecord
				cover: (56 to: 71)
				declaredAt: (37 to: 52)) balance ] valueCoveringAll:
				{73 to: 79} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{29 to: 32. 83 to: 90}.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (29 to: 45)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{47 to: 49})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (72 to: 88)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{90 to: 92})
		cover: (53 to: 68)
		declaredAt: (53 to: 68).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aFinancialRecord
	[
	(self coverAll:
		{27 to: 30}) assertCanAdd:
		(aFinancialRecord
			cover: (46 to: 61)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{32 to: 44}.
	[
	(parentPortfolios
		cover: (65 to: 80)
		declaredAt: (65 to: 80)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (108 to: 123)
			declaredAt: (89 to: 104)) assertParentCanAdd:
			(aFinancialRecord
				cover: (145 to: 160)
				declaredAt: (6 to: 21)) ] valueCoveringAll:
			{125 to: 143} ]] valueCoveringAll:
		{82 to: 84}.
	[
	(financialRecords
		cover: (166 to: 181)
		declaredAt: (166 to: 181)) add:
		(aFinancialRecord
			cover: (188 to: 203)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{183 to: 186}.
	[
	(aFinancialRecord
		cover: (207 to: 222)
		declaredAt: (6 to: 21)) addParent:
		(self coverAll:
			{235 to: 238}) ] valueCoveringAll:
		{224 to: 233}.! !
!Behavior method!
assertCanAdd: aFinancialRecord
	[
	([
	(self coverAll:
		{35 to: 38}) =
		(aFinancialRecord
			cover: (42 to: 57)
			declaredAt: (15 to: 30)) ] valueCoveringAll:
		{40 to: 40}) ifTrue: [
		[
		(self coverAll:
			{69 to: 72}) signalCannotAddItselfError ] valueCoveringAll:
			{74 to: 99} ]] valueCoveringAll:
		{59 to: 65}.
	[
	([
	(financialRecords
		cover: (108 to: 123)
		declaredAt: (108 to: 123)) includes:
		(aFinancialRecord
			cover: (135 to: 150)
			declaredAt: (15 to: 30)) ] valueCoveringAll:
		{125 to: 133}) ifTrue: [
		[
		(self coverAll:
			{163 to: 166}) signalCannotAddFinancialRecordError ] valueCoveringAll:
			{168 to: 202} ]] valueCoveringAll:
		{153 to: 159}.
	[
	(financialRecords
		cover: (210 to: 225)
		declaredAt: (108 to: 123)) do: [ :internalFinancialRecord |
		[
		(internalFinancialRecord
			cover: (260 to: 282)
			declaredAt: (234 to: 256)) assertCanAdd:
			(aFinancialRecord
				cover: (298 to: 313)
				declaredAt: (15 to: 30)) ] valueCoveringAll:
			{284 to: 296} ]] valueCoveringAll:
		{227 to: 229}.! !
!Behavior method!
addParent: aParentPortfolio
	self.
	[
	(parentPortfolios
		cover: (32 to: 47)
		declaredAt: (32 to: 47)) add:
		(aParentPortfolio
			cover: (54 to: 69)
			declaredAt: (12 to: 27)) ] valueCoveringAll:
		{49 to: 52}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balanceBeingCalculated :transaction |
			[
			(transaction
				cover: (85 to: 95)
				declaredAt: (68 to: 78)) modifyBalance:
				(balanceBeingCalculated
					cover: (112 to: 133)
					declaredAt: (44 to: 65)) ] valueCoveringAll:
				{97 to: 110} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifyBalance: balanceToChange
	^ [
	(balanceToChange
		cover: (35 to: 49)
		declaredAt: (16 to: 30)) +
		([
		(self coverAll:
			{53 to: 56}) value ] valueCoveringAll:
			{58 to: 62}) ] valueCoveringAll:
		{51 to: 51}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
assertCanAdd: aFinancialRecord
	^ true coverAll:
		{35 to: 38}.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialRecords
		cover: (33 to: 48)
		declaredAt: (33 to: 48)) anySatisfy: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (84 to: 99)
			declaredAt: (65 to: 80)) hasRegistered:
			(aTransaction
				cover: (116 to: 127)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{101 to: 114} ]] valueCoveringAll:
		{50 to: 60}.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
transactions
	| allTransactions |
	(allTransactions _ [
	(OrderedCollection
		cover: (55 to: 71)
		declaredAt: (55 to: 71)) new ] valueCoveringAll:
		{73 to: 75})
		cover: (37 to: 51)
		declaredAt: (18 to: 32).
	[
	(financialRecords
		cover: (79 to: 94)
		declaredAt: (79 to: 94)) do: [ :aFinancialRecord |
		[
		(allTransactions
			cover: (122 to: 136)
			declaredAt: (18 to: 32)) addAll:
			([
			(aFinancialRecord
				cover: (146 to: 161)
				declaredAt: (103 to: 118)) transactions ] valueCoveringAll:
				{163 to: 174}) ] valueCoveringAll:
			{138 to: 144} ]] valueCoveringAll:
		{96 to: 98}.
	^ allTransactions
		cover: (183 to: 197)
		declaredAt: (18 to: 32).! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
signalCannotAddFinancialRecordError
	^ [
	(self coverAll:
		{41 to: 44}) error:
		([
		(Portfolio
			cover: (53 to: 61)
			declaredAt: (53 to: 61)) cannotAddFinancialRecordErrorDescription ] valueCoveringAll:
			{63 to: 102}) ] valueCoveringAll:
		{46 to: 51}.! !
!Behavior method!
cannotAddFinancialRecordErrorDescription
	^ 'Cannot add repeated financial record' coverAll:
		{45 to: 82}.! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
signalCannotAddItselfError
	^ [
	(self coverAll:
		{32 to: 35}) error:
		([
		(Portfolio
			cover: (44 to: 52)
			declaredAt: (44 to: 52)) cannotAddItselfErrorDescription ] valueCoveringAll:
			{54 to: 84}) ] valueCoveringAll:
		{37 to: 42}.! !
!Behavior method!
cannotAddItselfErrorDescription
	^ 'Cannot add portfolio to itself' coverAll:
		{36 to: 67}.! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!Behavior method!
assertParentCanAdd: aFinancialRecord
	[
	(self coverAll:
		{41 to: 44}) assertCanAdd:
		(aFinancialRecord
			cover: (60 to: 75)
			declaredAt: (21 to: 36)) ] valueCoveringAll:
		{46 to: 58}.
	[
	(parentPortfolios
		cover: (79 to: 94)
		declaredAt: (79 to: 94)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (122 to: 137)
			declaredAt: (103 to: 118)) assertParentCanAdd:
			(aFinancialRecord
				cover: (159 to: 174)
				declaredAt: (21 to: 36)) ] valueCoveringAll:
			{139 to: 157} ]] valueCoveringAll:
		{96 to: 98}.! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:28:25'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:29:18'!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].! !

!methodRemoval: PortfolioTest #aaatest16 stamp: 'MF 10/16/2021 19:29:19'!
aaatest16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self should: [ internalPortfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription].!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:31:46'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:31:49' prior: 50863339!
add: aFinancialRecord 
	
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:31:50'!
FAILURE!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:31:50'!
FAILURE!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:31:50'!
FAILURE!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:31:50'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:31:58' prior: 50864014!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:34:42' prior: 50864061!
add: aFinancialRecord 
	
	self assertRootPortfoliosCanAdd: aFinancialRecord.
	
	"self assertCanAdd: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ]."
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:37:18'!
assertRootPortfoliosCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertCanAdd: aFinancialRecord ]
		ifFalse: [ parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertRootPortfoliosCanAdd: aFinancialRecord ]]! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:37:24'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:38:10' prior: 50864072!
add: aFinancialRecord 
	
	self assertRootPortfoliosCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:38:28' prior: 50862901 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:39:18' prior: 50864142 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:39:22' prior: 50864133!
add: aFinancialRecord 
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ].
	self assertRootPortfoliosCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:39:23'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:39:35'!
assertIsNotItself: aFinancialRecord

	^ self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:39:35' prior: 50864167!
add: aFinancialRecord 
	
	self assertIsNotItself: aFinancialRecord.
	self assertRootPortfoliosCanAdd: aFinancialRecord.
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:39:40' prior: 50864221!
add: aFinancialRecord 
	
	self assertIsNotItself: aFinancialRecord.
	self assertRootPortfoliosCanAdd: aFinancialRecord.
	
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:39:41'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:13'!
assertAllRootPortfoliosCanAdd: aFinancialRecord

	^ parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertRootPortfoliosCanAdd: aFinancialRecord ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:13' prior: 50864084!
assertRootPortfoliosCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertCanAdd: aFinancialRecord ]
		ifFalse: [ self assertAllRootPortfoliosCanAdd: aFinancialRecord]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49'!
assertDoesNotAppearRepeated: aFinancialRecord
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertCanAdd: aFinancialRecord  ].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49'!
assertDoesNotAppearRepeated: aFinancialRecord

	^true.! !
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49'!
assertDoesNotAppearRepeated: aFinancialRecord

	self subclassResponsibility.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49' prior: 50864156 overrides: 50862274!
assertCanAdd: aFinancialRecord
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49' prior: 50863390!
assertParentCanAdd: aFinancialRecord 

	self assertDoesNotAppearRepeated: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49' prior: 50864286!
assertRootPortfoliosCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertDoesNotAppearRepeated: aFinancialRecord ]
		ifFalse: [ self assertAllRootPortfoliosCanAdd: aFinancialRecord]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:41:49' prior: 50864295 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ].! !

!methodRemoval: Portfolio #assertCanAdd: stamp: 'MF 10/16/2021 19:41:49'!
assertCanAdd: aFinancialRecord
	
	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ].!

!methodRemoval: ReceptiveAccount #assertCanAdd: stamp: 'MF 10/16/2021 19:41:49'!
assertCanAdd: aFinancialRecord

	^true.!

!methodRemoval: FinancialRecord #assertCanAdd: stamp: 'MF 10/16/2021 19:41:49'!
assertCanAdd: aFinancialRecord

	self subclassResponsibility.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:42:04'!
assertCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertDoesNotAppearRepeated: aFinancialRecord ]
		ifFalse: [ self assertAllRootPortfoliosCanAdd: aFinancialRecord]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:42:04' prior: 50864231!
add: aFinancialRecord 
	
	self assertIsNotItself: aFinancialRecord.
	self assertCanAdd: aFinancialRecord.
	
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:42:04' prior: 50864278!
assertAllRootPortfoliosCanAdd: aFinancialRecord

	^ parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertCanAdd: aFinancialRecord ]! !

!methodRemoval: Portfolio #assertRootPortfoliosCanAdd: stamp: 'MF 10/16/2021 19:42:04'!
assertRootPortfoliosCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertDoesNotAppearRepeated: aFinancialRecord ]
		ifFalse: [ self assertAllRootPortfoliosCanAdd: aFinancialRecord]!

!methodRemoval: Portfolio #assertParentCanAdd: stamp: 'MF 10/16/2021 19:42:44'!
assertParentCanAdd: aFinancialRecord 

	self assertDoesNotAppearRepeated: aFinancialRecord.
	parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertParentCanAdd: aFinancialRecord ].
!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:20'!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	^ (financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:20' prior: 50864351 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	self assertRecordIsNotDirectlyIncluded: aFinancialRecord.
	
	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:36'!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	^ financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:36' prior: 50864435 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	self assertRecordIsNotDirectlyIncluded: aFinancialRecord.
	
	self assertRecordIsNotIndirectlyIncluded: aFinancialRecord.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:40' prior: 50864455 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	self assertRecordIsNotDirectlyIncluded: aFinancialRecord.
	self assertRecordIsNotIndirectlyIncluded: aFinancialRecord.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:50' prior: 50864426!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(financialRecords includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:44:53' prior: 50864445!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord  ]! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:44:54'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 19:48:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 19:48:58'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 19:48:58'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 19:48:58'!
PASSED!
!FinancialRecord methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 19:49:16'!
balance

	self subclassResponsibility! !
!FinancialRecord methodsFor: 'balance' stamp: 'MF 10/16/2021 19:49:57'!
transactions

	self subclassResponsibility! !
!FinancialRecord methodsFor: 'transactions' stamp: 'MF 10/16/2021 19:51:22'!
hasRegistered: aTransaction

	self subclassResponsibility ! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/16/2021 20:03:00' prior: 50864401!
assertAllRootPortfoliosCanAdd: aFinancialRecord

	^parentPortfolios do: [ :aParentPortfolio | aParentPortfolio assertCanAdd: aFinancialRecord ]! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:03:03'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:03:04'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 20:06:11' prior: 50862015 overrides: 50864569!
transactions

	| allTransactions |
	allTransactions _ OrderedCollection new.
	financialRecords do: [ :aFinancialRecord | allTransactions addAll: aFinancialRecord transactions ].
	
	^allTransactions.! !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 20:12:30' prior: 50864624 overrides: 50864569!
transactions

	| allTransactions |
	allTransactions _ OrderedCollection new.
	financialRecords do: [ :aFinancialRecord | aFinancialRecord addAllTransactionsTo: allTransactions ].
	
	^allTransactions.! !
!Portfolio methodsFor: 'transactions' stamp: 'MF 10/16/2021 20:14:33'!
addAllTransactionsTo: aCollectionOfTransactions
	
	financialRecords do: [ :aFinancialRecord | aFinancialRecord addAllTransactionsTo: aCollectionOfTransactions ]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'MF 10/16/2021 20:14:56'!
addAllTransactionsTo: aCollectionOfTransactions

	aCollectionOfTransactions addAll: self transactions.! !
!FinancialRecord methodsFor: 'transactions' stamp: 'MF 10/16/2021 20:15:03'!
addAllTransactionsTo: aCollectionOfTransactions

	self subclassResponsibility.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:15:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:21:43'!
assertCantAdd: portfolio to: account

	^ self should: [ portfolio add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:21:43' prior: 50862360!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self assertCantAdd: portfolio to: account.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:22:03' prior: 50864700!
assertCantAdd: aFinancialRecord to: account

	^ self should: [ aFinancialRecord add: account ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:22:08' prior: 50864720!
assertCantAdd: aFinancialRecord to: aPortfolio

	^ self should: [ aFinancialRecord add: aPortfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:22:26' prior: 50864731!
assertCantAdd: aFinancialRecord to: aPortfolio

	^ self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription]! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:22:29'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:22:37' prior: 50864711!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self assertCantAdd: account to: portfolio.! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:22:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:22:55' prior: 50862374!
test11

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	
	self assertCantAdd: account to: externalPortfolio.! !

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:22:56'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:23:36' prior: 50862545!
test13

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self assertCantAdd: account to: internalPortfolio.! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:23:37'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:23:52' prior: 50862822!
test14

	| internalPortfolio externalPortfolio account deeperInternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	deeperInternalPortfolio _ self portfolio.
	internalPortfolio add: deeperInternalPortfolio.
	
	self assertCantAdd: account to: deeperInternalPortfolio.! !

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:23:54'!
PASSED!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/16/2021 20:24:03' prior: 50864742!
assertCantAdd: aFinancialRecord to: aPortfolio

	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription]! !

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:24:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:24:19' prior: 50863253!
test15

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.! !

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:24:20'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'MF 10/16/2021 20:24:33' prior: 50863934!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.! !

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/16/2021 20:24:34'!
PASSED!

----SNAPSHOT----(16 October 2021 20:25:51) CuisUniversity-4532.image priorSource: 16967837!

----SNAPSHOT----(17 October 2021 02:59:12) CuisUniversity-4532.image priorSource: 17071411!

----STARTUP---- (17 October 2021 15:38:42) as C:\Users\maxi\Desktop\portfolio - Copy\CuisUniversity-4532.image!


!methodRemoval: AccountTransaction #effectOnBalance stamp: 'MF 10/17/2021 15:39:08'!
effectOnBalance

	self subclassResponsibility !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 15:39:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/17/2021 15:39:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/17/2021 15:39:14'!
PASSED!
!Behavior method!
initialize
	(financialRecords _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (14 to: 29)
		declaredAt: (14 to: 29).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (76 to: 92)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (57 to: 72)
		declaredAt: (57 to: 72).! !
!Behavior method!
balance
	^ [
	(financialRecords
		cover: (12 to: 27)
		declaredAt: (12 to: 27))
		sum: [ :aFinancialRecord |
			[
			(aFinancialRecord
				cover: (56 to: 71)
				declaredAt: (37 to: 52)) balance ] valueCoveringAll:
				{73 to: 79} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{29 to: 32. 83 to: 90}.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (29 to: 45)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{47 to: 49})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (72 to: 88)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{90 to: 92})
		cover: (53 to: 68)
		declaredAt: (53 to: 68).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aFinancialRecord
	[
	(self coverAll:
		{27 to: 30}) assertIsNotItself:
		(aFinancialRecord
			cover: (51 to: 66)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{32 to: 49}.
	[
	(self coverAll:
		{70 to: 73}) assertCanAdd:
		(aFinancialRecord
			cover: (89 to: 104)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{75 to: 87}.
	[
	(financialRecords
		cover: (110 to: 125)
		declaredAt: (110 to: 125)) add:
		(aFinancialRecord
			cover: (132 to: 147)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{127 to: 130}.
	[
	(aFinancialRecord
		cover: (151 to: 166)
		declaredAt: (6 to: 21)) addParent:
		(self coverAll:
			{179 to: 182}) ] valueCoveringAll:
		{168 to: 177}.! !
!Behavior method!
assertIsNotItself: aFinancialRecord
	^ [
	([
	(self coverAll:
		{41 to: 44}) =
		(aFinancialRecord
			cover: (48 to: 63)
			declaredAt: (20 to: 35)) ] valueCoveringAll:
		{46 to: 46}) ifTrue: [
		[
		(self coverAll:
			{75 to: 78}) signalCannotAddItselfError ] valueCoveringAll:
			{80 to: 105} ]] valueCoveringAll:
		{65 to: 71}.! !
!Behavior method!
assertCanAdd: aFinancialRecord
	self coverAll:
		{73 to: 76}.
	[
	([
	(parentPortfolios
		cover: (36 to: 51)
		declaredAt: (36 to: 51)) isEmpty ] valueCoveringAll:
		{53 to: 59})
		ifTrue: [
			[
			(self coverAll:
				{139 to: 142}) assertDoesNotAppearRepeated:
				(aFinancialRecord
					cover: (107 to: 122)
					declaredAt: (15 to: 30)) ] valueCoveringAll:
				{78 to: 105} ]
		ifFalse: [
			[
			self assertAllRootPortfoliosCanAdd:
				(aFinancialRecord
					cover: (175 to: 190)
					declaredAt: (15 to: 30)) ] valueCoveringAll:
				{144 to: 173} ]] valueCoveringAll:
		{63 to: 69. 128 to: 135}.! !
!Behavior method!
assertDoesNotAppearRepeated: aFinancialRecord
	[
	(self coverAll:
		{50 to: 53}) assertRecordIsNotDirectlyIncluded:
		(aFinancialRecord
			cover: (90 to: 105)
			declaredAt: (30 to: 45)) ] valueCoveringAll:
		{55 to: 88}.
	[
	(self coverAll:
		{109 to: 112}) assertRecordIsNotIndirectlyIncluded:
		(aFinancialRecord
			cover: (151 to: 166)
			declaredAt: (30 to: 45)) ] valueCoveringAll:
		{114 to: 149}.! !
!Behavior method!
assertRecordIsNotDirectlyIncluded: aFinancialRecord
	[
	([
	(financialRecords
		cover: (56 to: 71)
		declaredAt: (56 to: 71)) includes:
		(aFinancialRecord
			cover: (83 to: 98)
			declaredAt: (36 to: 51)) ] valueCoveringAll:
		{73 to: 81}) ifTrue: [
		[
		(self coverAll:
			{111 to: 114}) signalCannotAddFinancialRecordError ] valueCoveringAll:
			{116 to: 150} ]] valueCoveringAll:
		{101 to: 107}.! !
!Behavior method!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord
	[
	(financialRecords
		cover: (57 to: 72)
		declaredAt: (57 to: 72)) do: [ :internalFinancialRecord |
		[
		(internalFinancialRecord
			cover: (107 to: 129)
			declaredAt: (81 to: 103)) assertDoesNotAppearRepeated:
			(aFinancialRecord
				cover: (160 to: 175)
				declaredAt: (38 to: 53)) ] valueCoveringAll:
			{131 to: 158} ]] valueCoveringAll:
		{74 to: 76}.! !
!Behavior method!
addParent: aParentPortfolio
	self.
	[
	(parentPortfolios
		cover: (32 to: 47)
		declaredAt: (32 to: 47)) add:
		(aParentPortfolio
			cover: (54 to: 69)
			declaredAt: (12 to: 27)) ] valueCoveringAll:
		{49 to: 52}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balanceBeingCalculated :transaction |
			[
			(transaction
				cover: (85 to: 95)
				declaredAt: (68 to: 78)) modifyBalance:
				(balanceBeingCalculated
					cover: (112 to: 133)
					declaredAt: (44 to: 65)) ] valueCoveringAll:
				{97 to: 110} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifyBalance: balanceToChange
	^ [
	(balanceToChange
		cover: (35 to: 49)
		declaredAt: (16 to: 30)) +
		([
		(self coverAll:
			{53 to: 56}) value ] valueCoveringAll:
			{58 to: 62}) ] valueCoveringAll:
		{51 to: 51}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
assertDoesNotAppearRepeated: aFinancialRecord
	^ true coverAll:
		{50 to: 53}.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialRecords
		cover: (33 to: 48)
		declaredAt: (33 to: 48)) anySatisfy: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (84 to: 99)
			declaredAt: (65 to: 80)) hasRegistered:
			(aTransaction
				cover: (116 to: 127)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{101 to: 114} ]] valueCoveringAll:
		{50 to: 60}.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
transactions
	| allTransactions |
	(allTransactions _ [
	(OrderedCollection
		cover: (55 to: 71)
		declaredAt: (55 to: 71)) new ] valueCoveringAll:
		{73 to: 75})
		cover: (37 to: 51)
		declaredAt: (18 to: 32).
	[
	(financialRecords
		cover: (79 to: 94)
		declaredAt: (79 to: 94)) do: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (122 to: 137)
			declaredAt: (103 to: 118)) addAllTransactionsTo:
			(allTransactions
				cover: (161 to: 175)
				declaredAt: (18 to: 32)) ] valueCoveringAll:
			{139 to: 159} ]] valueCoveringAll:
		{96 to: 98}.
	^ allTransactions
		cover: (184 to: 198)
		declaredAt: (18 to: 32).! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
addAllTransactionsTo: aCollectionOfTransactions
	[
	(aCollectionOfTransactions
		cover: (51 to: 75)
		declaredAt: (23 to: 47)) addAll:
		([
		(self coverAll:
			{85 to: 88}) transactions ] valueCoveringAll:
			{90 to: 101}) ] valueCoveringAll:
		{77 to: 83}.! !

!testRun: #PortfolioTest #test08 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
signalCannotAddFinancialRecordError
	^ [
	(self coverAll:
		{41 to: 44}) error:
		([
		(Portfolio
			cover: (53 to: 61)
			declaredAt: (53 to: 61)) cannotAddFinancialRecordErrorDescription ] valueCoveringAll:
			{63 to: 102}) ] valueCoveringAll:
		{46 to: 51}.! !
!Behavior method!
cannotAddFinancialRecordErrorDescription
	^ 'Cannot add repeated financial record' coverAll:
		{45 to: 82}.! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
signalCannotAddItselfError
	^ [
	(self coverAll:
		{32 to: 35}) error:
		([
		(Portfolio
			cover: (44 to: 52)
			declaredAt: (44 to: 52)) cannotAddItselfErrorDescription ] valueCoveringAll:
			{54 to: 84}) ] valueCoveringAll:
		{37 to: 42}.! !
!Behavior method!
cannotAddItselfErrorDescription
	^ 'Cannot add portfolio to itself' coverAll:
		{36 to: 67}.! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!Behavior method!
assertAllRootPortfoliosCanAdd: aFinancialRecord
	^ [
	(parentPortfolios
		cover: (52 to: 67)
		declaredAt: (52 to: 67)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (95 to: 110)
			declaredAt: (76 to: 91)) assertCanAdd:
			(aFinancialRecord
				cover: (126 to: 141)
				declaredAt: (32 to: 47)) ] valueCoveringAll:
			{112 to: 124} ]] valueCoveringAll:
		{69 to: 71}.! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 16:12:22'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 16:32:58'!
test17

	| portfolio newlyAddedTransaction externalPortfolio |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: portfolio.
	
	self assert: (externalPortfolio transactions includes: newlyAddedTransaction).
! !

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 16:33:02'!
PASSED!
!Behavior method!
initialize
	(financialRecords _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (14 to: 29)
		declaredAt: (14 to: 29).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (76 to: 92)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{94 to: 96})
		cover: (57 to: 72)
		declaredAt: (57 to: 72).! !
!Behavior method!
balance
	^ [
	(financialRecords
		cover: (12 to: 27)
		declaredAt: (12 to: 27))
		sum: [ :aFinancialRecord |
			[
			(aFinancialRecord
				cover: (56 to: 71)
				declaredAt: (37 to: 52)) balance ] valueCoveringAll:
				{73 to: 79} ]
		ifEmpty: [
			0 coverAll:
				{94 to: 94} ]] valueCoveringAll:
		{29 to: 32. 83 to: 90}.! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (29 to: 45)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{47 to: 49})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).
	(parentPortfolios _ [
	(OrderedCollection
		cover: (72 to: 88)
		declaredAt: (29 to: 45)) new ] valueCoveringAll:
		{90 to: 92})
		cover: (53 to: 68)
		declaredAt: (53 to: 68).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
add: aFinancialRecord
	[
	(self coverAll:
		{27 to: 30}) assertIsNotItself:
		(aFinancialRecord
			cover: (51 to: 66)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{32 to: 49}.
	[
	(self coverAll:
		{70 to: 73}) assertCanAdd:
		(aFinancialRecord
			cover: (89 to: 104)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{75 to: 87}.
	[
	(financialRecords
		cover: (110 to: 125)
		declaredAt: (110 to: 125)) add:
		(aFinancialRecord
			cover: (132 to: 147)
			declaredAt: (6 to: 21)) ] valueCoveringAll:
		{127 to: 130}.
	[
	(aFinancialRecord
		cover: (151 to: 166)
		declaredAt: (6 to: 21)) addParent:
		(self coverAll:
			{179 to: 182}) ] valueCoveringAll:
		{168 to: 177}.! !
!Behavior method!
assertIsNotItself: aFinancialRecord
	^ [
	([
	(self coverAll:
		{41 to: 44}) =
		(aFinancialRecord
			cover: (48 to: 63)
			declaredAt: (20 to: 35)) ] valueCoveringAll:
		{46 to: 46}) ifTrue: [
		[
		(self coverAll:
			{75 to: 78}) signalCannotAddItselfError ] valueCoveringAll:
			{80 to: 105} ]] valueCoveringAll:
		{65 to: 71}.! !
!Behavior method!
assertCanAdd: aFinancialRecord
	self coverAll:
		{73 to: 76}.
	[
	([
	(parentPortfolios
		cover: (36 to: 51)
		declaredAt: (36 to: 51)) isEmpty ] valueCoveringAll:
		{53 to: 59})
		ifTrue: [
			[
			(self coverAll:
				{139 to: 142}) assertDoesNotAppearRepeated:
				(aFinancialRecord
					cover: (107 to: 122)
					declaredAt: (15 to: 30)) ] valueCoveringAll:
				{78 to: 105} ]
		ifFalse: [
			[
			self assertAllRootPortfoliosCanAdd:
				(aFinancialRecord
					cover: (175 to: 190)
					declaredAt: (15 to: 30)) ] valueCoveringAll:
				{144 to: 173} ]] valueCoveringAll:
		{63 to: 69. 128 to: 135}.! !
!Behavior method!
assertDoesNotAppearRepeated: aFinancialRecord
	[
	(self coverAll:
		{50 to: 53}) assertRecordIsNotDirectlyIncluded:
		(aFinancialRecord
			cover: (90 to: 105)
			declaredAt: (30 to: 45)) ] valueCoveringAll:
		{55 to: 88}.
	[
	(self coverAll:
		{109 to: 112}) assertRecordIsNotIndirectlyIncluded:
		(aFinancialRecord
			cover: (151 to: 166)
			declaredAt: (30 to: 45)) ] valueCoveringAll:
		{114 to: 149}.! !
!Behavior method!
assertRecordIsNotDirectlyIncluded: aFinancialRecord
	[
	([
	(financialRecords
		cover: (56 to: 71)
		declaredAt: (56 to: 71)) includes:
		(aFinancialRecord
			cover: (83 to: 98)
			declaredAt: (36 to: 51)) ] valueCoveringAll:
		{73 to: 81}) ifTrue: [
		[
		(self coverAll:
			{111 to: 114}) signalCannotAddFinancialRecordError ] valueCoveringAll:
			{116 to: 150} ]] valueCoveringAll:
		{101 to: 107}.! !
!Behavior method!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord
	[
	(financialRecords
		cover: (57 to: 72)
		declaredAt: (57 to: 72)) do: [ :internalFinancialRecord |
		[
		(internalFinancialRecord
			cover: (107 to: 129)
			declaredAt: (81 to: 103)) assertDoesNotAppearRepeated:
			(aFinancialRecord
				cover: (160 to: 175)
				declaredAt: (38 to: 53)) ] valueCoveringAll:
			{131 to: 158} ]] valueCoveringAll:
		{74 to: 76}.! !
!Behavior method!
addParent: aParentPortfolio
	self.
	[
	(parentPortfolios
		cover: (32 to: 47)
		declaredAt: (32 to: 47)) add:
		(aParentPortfolio
			cover: (54 to: 69)
			declaredAt: (12 to: 27)) ] valueCoveringAll:
		{49 to: 52}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :balanceBeingCalculated :transaction |
			[
			(transaction
				cover: (85 to: 95)
				declaredAt: (68 to: 78)) modifyBalance:
				(balanceBeingCalculated
					cover: (112 to: 133)
					declaredAt: (44 to: 65)) ] valueCoveringAll:
				{97 to: 110} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
modifyBalance: balanceToChange
	^ [
	(balanceToChange
		cover: (35 to: 49)
		declaredAt: (16 to: 30)) +
		([
		(self coverAll:
			{53 to: 56}) value ] valueCoveringAll:
			{58 to: 62}) ] valueCoveringAll:
		{51 to: 51}.! !
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #PortfolioTest #test02 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
assertDoesNotAppearRepeated: aFinancialRecord
	^ true coverAll:
		{50 to: 53}.! !

!testRun: #PortfolioTest #test03 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(financialRecords
		cover: (33 to: 48)
		declaredAt: (33 to: 48)) anySatisfy: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (84 to: 99)
			declaredAt: (65 to: 80)) hasRegistered:
			(aTransaction
				cover: (116 to: 127)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{101 to: 114} ]] valueCoveringAll:
		{50 to: 60}.! !

!testRun: #PortfolioTest #test04 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
transactions
	| allTransactions |
	(allTransactions _ [
	(OrderedCollection
		cover: (55 to: 71)
		declaredAt: (55 to: 71)) new ] valueCoveringAll:
		{73 to: 75})
		cover: (37 to: 51)
		declaredAt: (18 to: 32).
	[
	(financialRecords
		cover: (79 to: 94)
		declaredAt: (79 to: 94)) do: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (122 to: 137)
			declaredAt: (103 to: 118)) addAllTransactionsTo:
			(allTransactions
				cover: (161 to: 175)
				declaredAt: (18 to: 32)) ] valueCoveringAll:
			{139 to: 159} ]] valueCoveringAll:
		{96 to: 98}.
	^ allTransactions
		cover: (184 to: 198)
		declaredAt: (18 to: 32).! !

!testRun: #PortfolioTest #test07 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
addAllTransactionsTo: aCollectionOfTransactions
	[
	(aCollectionOfTransactions
		cover: (51 to: 75)
		declaredAt: (23 to: 47)) addAll:
		([
		(self coverAll:
			{85 to: 88}) transactions ] valueCoveringAll:
			{90 to: 101}) ] valueCoveringAll:
		{77 to: 83}.! !

!testRun: #PortfolioTest #test08 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
signalCannotAddFinancialRecordError
	^ [
	(self coverAll:
		{41 to: 44}) error:
		([
		(Portfolio
			cover: (53 to: 61)
			declaredAt: (53 to: 61)) cannotAddFinancialRecordErrorDescription ] valueCoveringAll:
			{63 to: 102}) ] valueCoveringAll:
		{46 to: 51}.! !
!Behavior method!
cannotAddFinancialRecordErrorDescription
	^ 'Cannot add repeated financial record' coverAll:
		{45 to: 82}.! !

!testRun: #PortfolioTest #test10 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
signalCannotAddItselfError
	^ [
	(self coverAll:
		{32 to: 35}) error:
		([
		(Portfolio
			cover: (44 to: 52)
			declaredAt: (44 to: 52)) cannotAddItselfErrorDescription ] valueCoveringAll:
			{54 to: 84}) ] valueCoveringAll:
		{37 to: 42}.! !
!Behavior method!
cannotAddItselfErrorDescription
	^ 'Cannot add portfolio to itself' coverAll:
		{36 to: 67}.! !

!testRun: #PortfolioTest #test12 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
assertAllRootPortfoliosCanAdd: aFinancialRecord
	^ [
	(parentPortfolios
		cover: (52 to: 67)
		declaredAt: (52 to: 67)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (95 to: 110)
			declaredAt: (76 to: 91)) assertCanAdd:
			(aFinancialRecord
				cover: (126 to: 141)
				declaredAt: (32 to: 47)) ] valueCoveringAll:
			{112 to: 124} ]] valueCoveringAll:
		{69 to: 71}.! !

!testRun: #PortfolioTest #test13 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!Behavior method!
addAllTransactionsTo: aCollectionOfTransactions
	[
	(financialRecords
		cover: (52 to: 67)
		declaredAt: (52 to: 67)) do: [ :aFinancialRecord |
		[
		(aFinancialRecord
			cover: (95 to: 110)
			declaredAt: (76 to: 91)) addAllTransactionsTo:
			(aCollectionOfTransactions
				cover: (134 to: 158)
				declaredAt: (23 to: 47)) ] valueCoveringAll:
			{112 to: 132} ]] valueCoveringAll:
		{69 to: 71}.! !

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 16:33:09'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:06:29'!
test18

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.! !

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:06:30'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:13:40' prior: 50864481!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertDoesNotAppearRepeated: internalFinancialRecord.]! !

!testRun: #PortfolioTest #test01 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:13:41'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:14:21' prior: 50865963!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:14:39' prior: 50864382!
assertCanAdd: aFinancialRecord.
	
	parentPortfolios isEmpty
		ifTrue: [ self assertDoesNotAppearRepeated: aFinancialRecord ]
		ifFalse: [ self assertAllRootPortfoliosCanAdd: aFinancialRecord]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:13:40' prior: 50866016!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertDoesNotAppearRepeated: internalFinancialRecord.]! !
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:16:13'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: 0 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test01 stamp: 'MF 10/17/2021 17:16:13'!
test01

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: 0 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:16:50'!
test02PortfolioWithOneRecordHasThatRecordBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test02 stamp: 'MF 10/17/2021 17:16:50'!
test02

	| portfolio |
	
	portfolio _ self portfolio.
	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:17:15'!
test03PortfolioWithManyRecordsHasSumOfRecordsBalance

	| portfolio |
	
	portfolio _ self portfolio.

	portfolio add: (self accountWithDepositWorth: 50).
	portfolio add: (self accountWithDepositWorth: 60).
	
	self assert: 110 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test03 stamp: 'MF 10/17/2021 17:17:15'!
test03

	| portfolio |
	
	portfolio _ self portfolio.

	portfolio add: (self accountWithDepositWorth: 50).
	portfolio add: (self accountWithDepositWorth: 60).
	
	self assert: 110 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:17:38'!
test04EmptyPortfolioHasNoRegisteredTransactions

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	self deny: (portfolio hasRegistered: transactionOfAccount).! !

!methodRemoval: PortfolioTest #test04 stamp: 'MF 10/17/2021 17:17:38'!
test04

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	self deny: (portfolio hasRegistered: transactionOfAccount).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:17:56'!
test05PortfolioWithOneRecordHasThatRecordsTransactions

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).! !

!methodRemoval: PortfolioTest #test05 stamp: 'MF 10/17/2021 17:17:56'!
test05

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:18:18'!
test01WhenEmptyHasZeroBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: 0 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test01EmptyPortfolioHasZeroBalance stamp: 'MF 10/17/2021 17:18:18'!
test01EmptyPortfolioHasZeroBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: 0 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:18:33'!
test02WithOneRecordHasThatRecordBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test02PortfolioWithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:18:33'!
test02PortfolioWithOneRecordHasThatRecordBalance

	| portfolio |
	
	portfolio _ self portfolio.
	
	portfolio add: (self accountWithDepositWorth: 50).
	
	self assert: 50 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:18:38'!
test03WithManyRecordsHasSumOfRecordsBalance

	| portfolio |
	
	portfolio _ self portfolio.

	portfolio add: (self accountWithDepositWorth: 50).
	portfolio add: (self accountWithDepositWorth: 60).
	
	self assert: 110 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test03PortfolioWithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:18:38'!
test03PortfolioWithManyRecordsHasSumOfRecordsBalance

	| portfolio |
	
	portfolio _ self portfolio.

	portfolio add: (self accountWithDepositWorth: 50).
	portfolio add: (self accountWithDepositWorth: 60).
	
	self assert: 110 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:18:44'!
test04WhenEmptyHasNoRegisteredTransactions

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	self deny: (portfolio hasRegistered: transactionOfAccount).! !

!methodRemoval: PortfolioTest #test04EmptyPortfolioHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:18:44'!
test04EmptyPortfolioHasNoRegisteredTransactions

	| portfolio account transactionOfAccount |
	
	portfolio _ self portfolio.
	account _ (self accountWithDepositWorth: 50).
	transactionOfAccount _ account transactions first.
	
	self deny: (portfolio hasRegistered: transactionOfAccount).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:18:50'!
test05WithOneRecordHasThatRecordsTransactions

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).! !

!methodRemoval: PortfolioTest #test05PortfolioWithOneRecordHasThatRecordsTransactions stamp: 'MF 10/17/2021 17:18:50'!
test05PortfolioWithOneRecordHasThatRecordsTransactions

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:19:02'!
test06WithManyRecordsHasAllOfTheirTransactions

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	! !

!methodRemoval: PortfolioTest #test06 stamp: 'MF 10/17/2021 17:19:02'!
test06

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:19:14'!
test07WhenEmptyHasNoTransactions

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: portfolio transactions isEmpty.! !

!methodRemoval: PortfolioTest #test07 stamp: 'MF 10/17/2021 17:19:14'!
test07

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: portfolio transactions isEmpty.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:19:33'!
test05WithOneRecordHasThatRecordTransactionRegistered

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).! !

!methodRemoval: PortfolioTest #test05WithOneRecordHasThatRecordsTransactions stamp: 'MF 10/17/2021 17:19:33'!
test05WithOneRecordHasThatRecordsTransactions

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:19:38'!
test06WithManyRecordsHasAllOfTheirTransactionsRegistered

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	! !

!methodRemoval: PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactions stamp: 'MF 10/17/2021 17:19:38'!
test06WithManyRecordsHasAllOfTheirTransactions

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	
	self assert: (portfolio hasRegistered: newlyAddedTransaction).
	self assert: (portfolio hasRegistered: anotherNewlyAddedTransaction).
	!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:19:51'!
test07WhenEmptyReturnsNoTransactions

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: portfolio transactions isEmpty.! !

!methodRemoval: PortfolioTest #test07WhenEmptyHasNoTransactions stamp: 'MF 10/17/2021 17:19:51'!
test07WhenEmptyHasNoTransactions

	| portfolio |
	
	portfolio _ self portfolio.
	
	self assert: portfolio transactions isEmpty.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:20:09'!
test08WithOneRecordReturnsItsTransactions

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).! !

!methodRemoval: PortfolioTest #test08 stamp: 'MF 10/17/2021 17:20:09'!
test08

	| portfolio newlyAddedTransaction |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:20:29'!
test09WithManyRecordsReturnsUnionOfTransactions

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).
	self assert: (portfolio transactions includes: anotherNewlyAddedTransaction).! !

!methodRemoval: PortfolioTest #test09 stamp: 'MF 10/17/2021 17:20:29'!
test09

	| portfolio anotherNewlyAddedTransaction newlyAddedTransaction |
	
	portfolio _ self portfolio.
	
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	anotherNewlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	self assert: (portfolio transactions includes: newlyAddedTransaction).
	self assert: (portfolio transactions includes: anotherNewlyAddedTransaction).!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:20:41'!
test10CantAddRepeatedRecord

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self assertCantAdd: account to: portfolio.! !

!methodRemoval: PortfolioTest #test10 stamp: 'MF 10/17/2021 17:20:41'!
test10

	| portfolio account |
	
	portfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	portfolio add: account.
	
	self assertCantAdd: account to: portfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:21:16'!
test11WithRecordCantAddAnotherPortfolioWithSameRecord

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	
	self assertCantAdd: account to: externalPortfolio.! !

!methodRemoval: PortfolioTest #test11 stamp: 'MF 10/17/2021 17:21:16'!
test11

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	
	self assertCantAdd: account to: externalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:21:30'!
test12CantAddItself

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddItselfErrorDescription ].! !

!methodRemoval: PortfolioTest #test12 stamp: 'MF 10/17/2021 17:21:30'!
test12

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddItselfErrorDescription ].!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:22:39'!
test13CantAddRecordInsidePortfolioInsideItself

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test13 stamp: 'MF 10/17/2021 17:22:39'!
test13

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self assertCantAdd: account to: internalPortfolio.!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:24:31'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:24:32'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:24:33'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:24:34'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:24:37'!
PASSED!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:25:47' prior: 50864968!
assertCantAdd: aFinancialRecord to: aPortfolio

	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription.
			self deny: (aPortfolio includes: aFinancialRecord) ].! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:29:24'!
directlyIncludes: aFinancialRecord

	^ financialRecords includes: aFinancialRecord! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:29:24' prior: 50864473!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self directlyIncludes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'testing' stamp: 'MF 10/17/2021 17:30:20'!
includes: aFinancialRecord

	^ financialRecords includes: aFinancialRecord! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'MF 10/17/2021 17:30:20' prior: 50866736!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!methodRemoval: Portfolio #directlyIncludes: stamp: 'MF 10/17/2021 17:30:20'!
directlyIncludes: aFinancialRecord

	^ financialRecords includes: aFinancialRecord!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:30:47'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:30:47'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:30:47'!
FAILURE!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:31:40'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:31:47'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:31:47'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:31:47'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:31:51'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:31:52'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:31:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:31:55'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:31:56'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:31:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:31:58'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:32:00'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:32:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:32:03'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:32:05'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:32:06'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:32:07'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:32:09'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:32:12'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:32:13'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:32:14'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:32:16'!
FAILURE!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:32:16'!
FAILURE!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:32:31'!
FAILURE!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:32:54'!
FAILURE!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:33:28'!
FAILURE!

self includes: aFinancialRecord !

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:34:07'!
FAILURE!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:34:33' prior: 50866718!
assertCantAdd: aFinancialRecord to: aPortfolio

	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription. ].! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:34:34'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:34:35'!
PASSED!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:35:05' prior: 50866952!
assertCantAdd: aFinancialRecord to: aPortfolio

	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | 
			self assert: anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription.
			self deny: (aPortfolio includes: aFinancialRecord) ].! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:35:06'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:35:06'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:35:06'!
FAILURE!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:35:44' prior: 50867020!
assertCantAdd: aFinancialRecord to: aPortfolio

	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | 
			self assert: anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription.].
	
	self deny: (aPortfolio includes: aFinancialRecord) ! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:35:45'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:35:45'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:35:45'!
FAILURE!
!PortfolioTest methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:38:30' prior: 50867092!
assertCantAdd: aFinancialRecord to: aPortfolio

	| previouslyAddedRecords |
	
	previouslyAddedRecords _ aPortfolio size.
	
	self should: [ aPortfolio add: aFinancialRecord ] 
		raise: Error
		withExceptionDo: 
		[ :anError | 
			self assert: anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription.
			self assert: previouslyAddedRecords equals: aPortfolio size.].
	
	! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:38:31'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:38:31'!
ERROR!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:38:41'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:38:41'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:38:41'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'MF 10/17/2021 17:38:45' overrides: 16880927!
size

	^ financialRecords size! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:38:46'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:38:46'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:44:37' prior: 50866034!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertRecordIsNotDirectlyIncluded: internalFinancialRecord.]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:44:38'!
ERROR!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:44:38'!
ERROR!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:44:38'!
ERROR!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:44:38'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:44:38'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:44:38'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:44:49' prior: 50867353!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertDoesNotAppearRepeated: internalFinancialRecord.]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:44:50'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:44:50'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:44:54' prior: 50867421!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertRecordIsNotDirectlyIncluded: internalFinancialRecord.]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:44:58' prior: 50867489!
assertRecordIsNotIndirectlyIncluded: aFinancialRecord

	financialRecords do: [ :internalFinancialRecord | 
		internalFinancialRecord assertDoesNotAppearRepeated: aFinancialRecord.
		aFinancialRecord assertDoesNotAppearRepeated: internalFinancialRecord.]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:44:58'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:44:58'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:46:03' prior: 50866749!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:46:04'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:46:04'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:46:03' prior: 50867568!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:46:51' prior: 50867632!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:46:51'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:46:52'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:46:52'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:47:42' prior: 50867639!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:47:42'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:47:42'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:47:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:47:43'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:47:55' prior: 50867703!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self includes: aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:48:30' prior: 50867767!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!ReceptiveAccount methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:50:30' prior: 50864306 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self error: Portfolio cannotAddFinancialRecordErrorDescription ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/17/2021 17:50:31'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:50:33'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:50:34'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:50:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:50:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:50:34'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:50:34'!
PASSED!
!FinancialRecord methodsFor: 'error signals' stamp: 'MF 10/17/2021 17:51:19'!
signalCannotAddFinancialRecordError

	^ self error: Portfolio cannotAddFinancialRecordErrorDescription! !

!methodRemoval: Portfolio #signalCannotAddFinancialRecordError stamp: 'MF 10/17/2021 17:51:19'!
signalCannotAddFinancialRecordError

	^ self error: Portfolio cannotAddFinancialRecordErrorDescription!
!FinancialRecord class methodsFor: 'error descriptions' stamp: 'MF 10/17/2021 17:51:28'!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'! !

!methodRemoval: Portfolio class #cannotAddFinancialRecordErrorDescription stamp: 'MF 10/17/2021 17:51:28'!
cannotAddFinancialRecordErrorDescription

	^'Cannot add repeated financial record'!
!FinancialRecord methodsFor: 'error signals' stamp: 'MF 10/17/2021 17:51:41' prior: 50867874!
signalCannotAddFinancialRecordError

	^ self error: FinancialRecord cannotAddFinancialRecordErrorDescription! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:51:44'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:51:44'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:52:01' prior: 50864214!
assertIsNotItself: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddItselfError ]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:52:02'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:52:02'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'MF 10/17/2021 17:52:16' prior: 50864392!
add: aFinancialRecord 
	
	"self assertIsNotItself: aFinancialRecord."
	self assertCanAdd: aFinancialRecord.
	
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:52:17'!
FAILURE!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:52:17'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:52:17'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'MF 10/17/2021 17:52:28' prior: 50868025!
add: aFinancialRecord 
	
	self assertCanAdd: aFinancialRecord.
	
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:52:42' prior: 50866443!
test12CantAddItself

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddFinancialRecordErrorDescription ].! !

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:52:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:52:43'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'MF 10/17/2021 17:53:14' prior: 50868093!
add: aFinancialRecord 
	
	self assertIsNotItself: aFinancialRecord.
	self assertCanAdd: aFinancialRecord.
	
	financialRecords add: aFinancialRecord.
	aFinancialRecord addParent: self.! !
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 17:53:15' prior: 50868101!
test12CantAddItself

	| portfolio |
	
	portfolio _ self portfolio.
	
	self should: [ portfolio add: portfolio ] 
		raise: Error
		withExceptionDo: 
		[ :anError | self assert: 
			anError messageText equals: Portfolio cannotAddItselfErrorDescription ].! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:53:40' prior: 50867775!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!ReceptiveAccount methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:54:54' prior: 50867783 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord

	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'MF 10/17/2021 17:54:55'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:54:57'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:54:57'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:55:34' prior: 50864464 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	(self = aFinancialRecord) ifTrue: [ self signalCannotAddFinancialRecordError ].
	self assertRecordIsNotIndirectlyIncluded: aFinancialRecord.! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:55:35'!
PASSED!

!methodRemoval: Portfolio #assertRecordIsNotDirectlyIncluded: stamp: 'MF 10/17/2021 17:55:46'!
assertRecordIsNotDirectlyIncluded: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]!
!ReceptiveAccount methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:56:18' prior: 50868199 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:56:27' prior: 50868290 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ].
	self assertRecordIsNotIndirectlyIncluded: aFinancialRecord.! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:56:28'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:56:28'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:57:47'!
assertIsNotEqual: aFinancialRecord

	^ self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]! !
!Portfolio methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:57:47' prior: 50868371 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord
	
	self assertIsNotEqual: aFinancialRecord.
	self assertRecordIsNotIndirectlyIncluded: aFinancialRecord.! !
!FinancialRecord methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:57:53'!
assertIsNotEqual: aFinancialRecord

	^ self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!methodRemoval: Portfolio #assertIsNotEqual: stamp: 'MF 10/17/2021 17:57:53'!
assertIsNotEqual: aFinancialRecord

	^ self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]!
!ReceptiveAccount methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:58:02' prior: 50868363 overrides: 50864311!
assertDoesNotAppearRepeated: aFinancialRecord

	self assertIsNotEqual: aFinancialRecord.! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:58:05'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:58:05'!
PASSED!
!FinancialRecord methodsFor: 'assertions' stamp: 'MF 10/17/2021 17:59:40' prior: 50868451!
assertIsNotEqual: aFinancialRecord

	self = aFinancialRecord ifTrue: [ self signalCannotAddFinancialRecordError ]! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:59:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:59:43'!
PASSED!
!FinancialRecord methodsFor: 'error signals' stamp: 'MF 10/17/2021 17:59:51' prior: 50867899!
signalCannotAddFinancialRecordError

	self error: FinancialRecord cannotAddFinancialRecordErrorDescription! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'MF 10/17/2021 17:59:53'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'MF 10/17/2021 17:59:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:01:27'!
test14CantAddRecordThatIsInGrandparentPortfolio

	| internalPortfolio externalPortfolio account deeperInternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	deeperInternalPortfolio _ self portfolio.
	internalPortfolio add: deeperInternalPortfolio.
	
	self assertCantAdd: account to: deeperInternalPortfolio.! !

!methodRemoval: PortfolioTest #test14 stamp: 'MF 10/17/2021 18:01:27'!
test14

	| internalPortfolio externalPortfolio account deeperInternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	deeperInternalPortfolio _ self portfolio.
	internalPortfolio add: deeperInternalPortfolio.
	
	self assertCantAdd: account to: deeperInternalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:03:01'!
test15CantAddRecordInsidePortfolioWithManyParents

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test15 stamp: 'MF 10/17/2021 18:03:01'!
test15

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:03:32'!
test15WithManyParentsCantAddRecordInParent

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test15CantAddRecordInsidePortfolioWithManyParents stamp: 'MF 10/17/2021 18:03:32'!
test15CantAddRecordInsidePortfolioWithManyParents

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:03:47'!
test13WithOneParentCantAddRecordRepeatedInParent

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test13CantAddRecordInsidePortfolioInsideItself stamp: 'MF 10/17/2021 18:03:48'!
test13CantAddRecordInsidePortfolioInsideItself

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:03:54'!
test15WithManyParentsCantAddRecordRepeatedInParent

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test15WithManyParentsCantAddRecordInParent stamp: 'MF 10/17/2021 18:03:54'!
test15WithManyParentsCantAddRecordInParent

	| internalPortfolio externalPortfolio account anotherExternalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	externalPortfolio add: internalPortfolio. 
	
	anotherExternalPortfolio _ self portfolio.
	anotherExternalPortfolio add: internalPortfolio .
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:04:21'!
test16CantAddRecordRepeatedInBrotherPortfolio

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test16 stamp: 'MF 10/17/2021 18:04:21'!
test16

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'tests' stamp: 'MF 10/17/2021 18:05:30'!
test17WithPortfolioReturnsTransactionsInsideIncludedPortfolio

	| portfolio newlyAddedTransaction externalPortfolio |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: portfolio.
	
	self assert: (externalPortfolio transactions includes: newlyAddedTransaction).
! !

!methodRemoval: PortfolioTest #test17 stamp: 'MF 10/17/2021 18:05:30'!
test17

	| portfolio newlyAddedTransaction externalPortfolio |
	
	portfolio _ self portfolio.
	newlyAddedTransaction _ self addNewAccountWithATransactionTo: portfolio.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: portfolio.
	
	self assert: (externalPortfolio transactions includes: newlyAddedTransaction).
!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:07:40'!
test18CantAddPortfolioWithRepeatedRecord

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.! !

!methodRemoval: PortfolioTest #test18 stamp: 'MF 10/17/2021 18:07:40'!
test18

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:07:59'!
test18CantAddPortfolioWithRecordAlreadyIncluded

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.! !

!methodRemoval: PortfolioTest #test18CantAddPortfolioWithRepeatedRecord stamp: 'MF 10/17/2021 18:07:59'!
test18CantAddPortfolioWithRepeatedRecord

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:08:26'!
test18WithRecordCantAddPortfolioWithThatSameRecords

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.! !

!methodRemoval: PortfolioTest #test18CantAddPortfolioWithRecordAlreadyIncluded stamp: 'MF 10/17/2021 18:08:26'!
test18CantAddPortfolioWithRecordAlreadyIncluded

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:08:29'!
test18WithRecordCantAddPortfolioWithThatSameRecord

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.! !

!methodRemoval: PortfolioTest #test18WithRecordCantAddPortfolioWithThatSameRecords stamp: 'MF 10/17/2021 18:08:29'!
test18WithRecordCantAddPortfolioWithThatSameRecords

	| internalPortfolio externalPortfolio account |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	internalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: account.
	
	self assertCantAdd: internalPortfolio to: externalPortfolio.!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:09:16'!
test16CantAddRecordRepeatedInSiblingPortfolio

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.! !

!methodRemoval: PortfolioTest #test16CantAddRecordRepeatedInBrotherPortfolio stamp: 'MF 10/17/2021 18:09:16'!
test16CantAddRecordRepeatedInBrotherPortfolio

	| internalPortfolio anotherInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	anotherInternalPortfolio _ self portfolio.
	anotherInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: anotherInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.!
!PortfolioTest methodsFor: 'adding assertions tests' stamp: 'MF 10/17/2021 18:09:49' prior: 50868993!
test16CantAddRecordRepeatedInSiblingPortfolio

	| internalPortfolio siblingInternalPortfolio account externalPortfolio |
	
	internalPortfolio _ self portfolio.
	account _ self accountWithDepositWorth: 50.
	
	siblingInternalPortfolio _ self portfolio.
	siblingInternalPortfolio add: account.
	
	externalPortfolio _ self portfolio.
	externalPortfolio add: internalPortfolio.
	externalPortfolio add: siblingInternalPortfolio.
	
	self assertCantAdd: account to: internalPortfolio.! !

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test13WithOneParentCantAddRecordRepeatedInParent stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test14CantAddRecordThatIsInGrandparentPortfolio stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test15WithManyParentsCantAddRecordRepeatedInParent stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test16CantAddRecordRepeatedInSiblingPortfolio stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test17WithPortfolioReturnsTransactionsInsideIncludedPortfolio stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test18WithRecordCantAddPortfolioWithThatSameRecord stamp: 'MF 10/17/2021 18:10:02'!
PASSED!

!testRun: #PortfolioTest #test16CantAddRecordRepeatedInSiblingPortfolio stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test01WhenEmptyHasZeroBalance stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test02WithOneRecordHasThatRecordBalance stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test03WithManyRecordsHasSumOfRecordsBalance stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test04WhenEmptyHasNoRegisteredTransactions stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test05WithOneRecordHasThatRecordTransactionRegistered stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test06WithManyRecordsHasAllOfTheirTransactionsRegistered stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test07WhenEmptyReturnsNoTransactions stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test08WithOneRecordReturnsItsTransactions stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test09WithManyRecordsReturnsUnionOfTransactions stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test10CantAddRepeatedRecord stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test11WithRecordCantAddAnotherPortfolioWithSameRecord stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test12CantAddItself stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test13WithOneParentCantAddRecordRepeatedInParent stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test14CantAddRecordThatIsInGrandparentPortfolio stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test15WithManyParentsCantAddRecordRepeatedInParent stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test16CantAddRecordRepeatedInSiblingPortfolio stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test17WithPortfolioReturnsTransactionsInsideIncludedPortfolio stamp: 'MF 10/17/2021 18:10:06'!
PASSED!

!testRun: #PortfolioTest #test18WithRecordCantAddPortfolioWithThatSameRecord stamp: 'MF 10/17/2021 18:10:06'!
PASSED!